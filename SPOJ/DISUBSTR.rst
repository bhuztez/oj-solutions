===================
Distinct Substrings
===================

:tags: suffix

一个长度为N的字符串S，所有子串可以表示为

.. code::

    { S[i:j]
      FOR i <- range(0, N+1),
      FOR j <- range(0, N+1),
      i < j}

从0到N这N+1个整数中任选2个，i取小的，j取大的，这样总共就有\ :math:`{n+1 \choose 2}`\ 个子串

计算后缀数组T。对于S中的某个重复出现的子串P，我们找出T中最大的区间，使得其中每个字符串都以P开头

.. code::

    T[m-1][0:|P|] =/= P

    (m =< i =< n) => (T[i][0:|P|] = P)

    T[n+1][0:|P|] =/= P

所以P共出现了n+1-m次，需要从总数中减去n-m次。

可以按顺序比较 :code:`T[i] T[i+1] (0 =< i =< N-1)` ，若同时出现P，那么就从总数中减去1。而要去掉所有子串的重复次数，只需要每次从总数中减去两个字符串的最长公共前缀的长度。
